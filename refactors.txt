Hotel Refactors
9/8/2019

list_available_rooms could use .map rather than .each

list_available_rooms and find_available_rooms seem like redundant methods. I tried to collapse the two by making the end_date optional, but could not find the correct conditionals to use if end_date = nil, because end_date = start_date did not work. I would like to experiment with conditionals to find one that would work for both instances, since these methods essentailly do the same thing.

start_date and end_date are variable names that are overused in hotel_system, block, and reservation classes. It would be better practice to differentiate when I am referring to a block start date, versus a reservation start date, versus a start date that needs to be validated before assigning to a reservation or block.

@rooms in HotelSystem is an array, because I am often searching by room_id it makes more sense for @rooms to be a hash, with the room_id as the key to the hash

HotelSystem has far too many methods. I am not sure how to do this without creating too many dependencies but this class should probably be broken up further.

-----

Additional Hotel Refactors 
9/26/2019

Room list, block list, reservation list should be class variables so that they're easier to call throughout hotel_system.rb

Add code to reduce the following lines of code, found in two places in hotel_system.rb:
  @rooms[room_id - 1].dates_reserved << {start: start_date, end: end_date}
This code should delegate this behavior to the Room class so that HotelSystem can have less information about how the Room class works.

Change this test so that HotelSystem and Block classes are more loosely coupled:
  if block.available_room_numbers.include?(room_id)
Delegate behavior of finding if the list of available room #s includes room_id to the Block class so HotelSystem can have less information about how the Block class works.

Also change this deletion so that Block class performs this behavior rather than HotelSystem class:
  block.available_room_numbers.delete(room_id)
